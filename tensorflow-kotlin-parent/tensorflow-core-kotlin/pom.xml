<!--
  Copyright 2020 The TensorFlow Authors. All Rights Reserved.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  =======================================================================
  -->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.tensorflow</groupId>
    <artifactId>tensorflow-kotlin-parent</artifactId>
    <version>0.4.0-SNAPSHOT</version>
  </parent>
  <artifactId>tensorflow-core-kotlin</artifactId>
  <packaging>jar</packaging>

  <name>TensorFlow Core Kotlin Library</name>
  <description>Kotlin API wrappers for the TensorFlow core Java library</description>

  <properties>
    <javacpp.platform.extension></javacpp.platform.extension>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.tensorflow</groupId>
      <artifactId>tensorflow-core-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit5</artifactId>
      <version>${kotlin.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Include native binaries dependencies only for testing -->
    <dependency>
      <groupId>org.tensorflow</groupId>
      <artifactId>tensorflow-core-platform${javacpp.platform.extension}</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <!--
          Add generated classes to the source path
            These are classes generated by the annotation processor.
          -->
          <execution>
            <id>add-gen-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.basedir}/src/gen/annotations</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-maven-plugin</artifactId>
        <version>${kotlin.version}</version>
        <configuration>
          <args>
            <arg>-Xopt-in=kotlin.contracts.ExperimentalContracts</arg>
            <arg>-Xexplicit-api=strict</arg>
          </args>
        </configuration>
        <executions>
          <execution>
            <id>kapt</id>
            <goals>
              <goal>kapt</goal>
            </goals>
            <configuration>
              <sourceDirs>
                <sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
                <sourceDir>${project.basedir}/src/gen/annotations</sourceDir>
                <sourceDir>${project.basedir}/../../tensorflow-core/tensorflow-core-api/src/gen/java</sourceDir>
                <sourceDir>${project.basedir}/../../tensorflow-core/tensorflow-core-api/src/gen/annotations</sourceDir>
                <sourceDir>${project.basedir}/../../tensorflow-core/tensorflow-core-api/src/main/java</sourceDir>
              </sourceDirs>
              <annotationProcessors>
                <annotationProcessor>org.tensorflow.processor.operator.KotlinOpsProcessor</annotationProcessor>
              </annotationProcessors>
              <annotationProcessorPaths>
                <annotationProcessorPath>
                  <groupId>org.tensorflow</groupId>
                  <artifactId>tensorflow-kotlin-generator</artifactId>
                  <version>${project.version}</version>
                </annotationProcessorPath>
              </annotationProcessorPaths>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>ktlint-format-generated</id>
            <phase>process-sources</phase>
            <configuration>
              <target name="ktlint">
                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="false"
                  classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                  <arg value="-F"/>
                  <arg value="--verbose"/>
                  <arg value="src/gen/**/*.kt"/>
                </java>
                <!--Run twice because of https://github.com/pinterest/ktlint/issues/932-->
                <java taskname="ktlint2" dir="${basedir}" fork="true" failonerror="true"
                  classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                  <arg value="-F"/>
                  <arg value="--verbose"/>
                  <arg value="src/gen/**/*.kt"/>
                </java>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>ktlint-format</id>
            <configuration>
              <target name="ktlint">
                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                  classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                  <arg value="-F"/>
                  <arg value="src/**/*.kt"/>
                  <arg value="!src/gen/**/*.kt"/>
                  <arg value="--reporter=plain?group_by_file"/>
                </java>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>ktlint</id>
            <phase>process-sources</phase>
            <configuration>
              <target name="ktlint">
                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                  classpathref="maven.plugin.classpath" classname="com.pinterest.ktlint.Main">
                  <arg value="src/**/*.kt"/>
                  <arg value="!src/gen/**/*.kt"/>
                  <arg value="--reporter=plain?group_by_file"/>
                </java>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.pinterest</groupId>
            <artifactId>ktlint</artifactId>
            <version>0.41.0</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <!--        <configuration>-->
        <!--          <forkCount>1</forkCount>-->
        <!--          <reuseForks>false</reuseForks>-->
        <!--          <argLine>-Xmx2G -XX:MaxPermSize=256m</argLine>-->
        <!--        </configuration>-->
      </plugin>
    </plugins>
  </build>
</project>
